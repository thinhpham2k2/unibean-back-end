// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Unibean.Repository.Entities;

#nullable disable

namespace Unibean.Repository.Migrations
{
    [DbContext(typeof(UnibeanDBContext))]
    partial class UnibeanDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Unibean.Repository.Entities.Activity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StoreId")
                        .HasColumnType("char(26)")
                        .HasColumnName("store_id");

                    b.Property<string>("StudentId")
                        .HasColumnType("char(26)")
                        .HasColumnName("student_id");

                    b.Property<string>("TypeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("type_id");

                    b.Property<string>("VoucherItemId")
                        .HasColumnType("char(26)")
                        .HasColumnName("voucher_item_id");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TypeId");

                    b.HasIndex("VoucherItemId");

                    b.ToTable("tbl_activity");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.ActivityTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("ActivityId")
                        .HasColumnType("char(26)")
                        .HasColumnName("activity_id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("WalletId")
                        .HasColumnType("char(26)")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("WalletId");

                    b.ToTable("tbl_activity_transaction");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Admin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("char(20)")
                        .HasColumnName("phone");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_admin");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Area", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("AreaName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("area_name");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DistrictId")
                        .HasColumnType("char(26)")
                        .HasColumnName("district_id");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("tbl_area");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Campaign", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CampaignName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("campaign_name");

                    b.Property<string>("Condition")
                        .HasColumnType("text")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<DateOnly?>("EndOn")
                        .HasColumnType("date")
                        .HasColumnName("end_on");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<string>("PartnerId")
                        .HasColumnType("char(26)")
                        .HasColumnName("partner_id");

                    b.Property<DateOnly?>("StartOn")
                        .HasColumnType("date")
                        .HasColumnName("start_on");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalIncome")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("total_income");

                    b.Property<decimal?>("TotalSpending")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("total_spending");

                    b.Property<string>("TypeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("type_id");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.HasIndex("TypeId");

                    b.ToTable("tbl_campaign");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignCampus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CampaignId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campaign_id");

                    b.Property<string>("CampusId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campus_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CampusId");

                    b.ToTable("tbl_campaign_campus");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignGender", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CampaignId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campaign_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("GenderId")
                        .HasColumnType("char(26)")
                        .HasColumnName("gender_id");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("GenderId");

                    b.ToTable("tbl_campaign_gender");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignMajor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CampaignId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campaign_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("MajorId")
                        .HasColumnType("char(26)")
                        .HasColumnName("major_id");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("MajorId");

                    b.ToTable("tbl_campaign_major");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignStore", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CampaignId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campaign_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StoreId")
                        .HasColumnType("char(26)")
                        .HasColumnName("store_id");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("StoreId");

                    b.ToTable("tbl_campaign_store");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_campaign_type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Campus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("Address");

                    b.Property<string>("AreaId")
                        .HasColumnType("char(26)")
                        .HasColumnName("area_id");

                    b.Property<string>("CampusName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("campus_name");

                    b.Property<TimeOnly?>("ClosingHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("closing_hours");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<TimeOnly?>("OpeningHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("opening_hours");

                    b.Property<string>("Phone")
                        .HasColumnType("char(20)")
                        .HasColumnName("phone");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("UniversityId")
                        .HasColumnType("char(26)")
                        .HasColumnName("university_id");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("UniversityId");

                    b.ToTable("tbl_campus");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tbl_category");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Challenge", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("ChallengeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("challenge_name");

                    b.Property<decimal?>("Condition")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("TypeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("type_id");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("tbl_challenge");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.ChallengeTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("ChallengeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("challenge_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("WalletId")
                        .HasColumnType("char(26)")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.HasIndex("WalletId");

                    b.ToTable("tbl_challenge_transaction");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.ChallengeType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_challenge_type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CityName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("city_name");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tbl_city");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.District", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CityId")
                        .HasColumnType("char(26)")
                        .HasColumnName("city_id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DistrictName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("district_name");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("tbl_district");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Gender", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("GenderName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gender_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tbl_gender");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<ulong?>("IsCover")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_cover");

                    b.Property<string>("ProductId")
                        .HasColumnType("char(26)")
                        .HasColumnName("product_id");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_image");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Invitation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("InviteeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("invitee_id");

                    b.Property<string>("InviterId")
                        .HasColumnType("char(26)")
                        .HasColumnName("inviter_id");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("InviteeId");

                    b.HasIndex("InviterId");

                    b.ToTable("tbl_invitation");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Level", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Condition")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("LevelName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("level_name");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tbl_level");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Major", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("MajorName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("major_name");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tbl_major");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<string>("StationId")
                        .HasColumnType("char(26)")
                        .HasColumnName("station_id");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StudentId")
                        .HasColumnType("char(26)")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.HasIndex("StudentId");

                    b.ToTable("tbl_order");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("OrderId")
                        .HasColumnType("char(26)")
                        .HasColumnName("order_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("price");

                    b.Property<string>("ProductId")
                        .HasColumnType("char(26)")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("tbl_order_detail");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.OrderState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("OrderId")
                        .HasColumnType("char(26)")
                        .HasColumnName("order_id");

                    b.Property<string>("StateId")
                        .HasColumnType("char(26)")
                        .HasColumnName("state_id");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("StateId");

                    b.ToTable("tbl_order_state");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.OrderTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("OrderId")
                        .HasColumnType("char(26)")
                        .HasColumnName("order_id");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("WalletId")
                        .HasColumnType("char(26)")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("WalletId");

                    b.ToTable("tbl_order_transaction");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Partner", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Acronym")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("acronym");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("BrandName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("brand_name");

                    b.Property<TimeOnly?>("ClosingHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("closing_hours");

                    b.Property<string>("CoverFileName")
                        .HasColumnType("text")
                        .HasColumnName("cover_file_name");

                    b.Property<string>("CoverPhoto")
                        .HasColumnType("text")
                        .HasColumnName("cover_photo");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<string>("Logo")
                        .HasColumnType("text")
                        .HasColumnName("logo");

                    b.Property<string>("LogoFileName")
                        .HasColumnType("text")
                        .HasColumnName("logo_file_name");

                    b.Property<TimeOnly?>("OpeningHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("opening_hours");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("char(20)")
                        .HasColumnName("phone");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalIncome")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("total_income");

                    b.Property<decimal?>("TotalSpending")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("total_spending");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_partner");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Message")
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<string>("Method")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("method");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StudentId")
                        .HasColumnType("char(26)")
                        .HasColumnName("student_id");

                    b.Property<string>("Token")
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("tbl_payment");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.PaymentTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("PaymentId")
                        .HasColumnType("char(26)")
                        .HasColumnName("payment_id");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("WalletId")
                        .HasColumnType("char(26)")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.HasIndex("WalletId");

                    b.ToTable("tbl_payment_transaction");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CategoryId")
                        .HasColumnType("char(26)")
                        .HasColumnName("category_id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("LevelId")
                        .HasColumnType("char(26)")
                        .HasColumnName("level_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("product_name");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LevelId");

                    b.ToTable("tbl_product");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Request", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("AdminId")
                        .HasColumnType("char(26)")
                        .HasColumnName("admin_id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("PartnerId")
                        .HasColumnType("char(26)")
                        .HasColumnName("partner_id");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("PartnerId");

                    b.ToTable("tbl_request");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.RequestTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<string>("RequestId")
                        .HasColumnType("char(26)")
                        .HasColumnName("request_id");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("WalletId")
                        .HasColumnType("char(26)")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.HasIndex("WalletId");

                    b.ToTable("tbl_request_transaction");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.State", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("StateName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("state_name");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tbl_state");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Station", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<TimeOnly?>("ClosingHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("closing_hours");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<TimeOnly?>("OpeningHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("opening_hours");

                    b.Property<string>("Phone")
                        .HasColumnType("char(20)")
                        .HasColumnName("phone");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<string>("StationName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("station_name");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tbl_station");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Store", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("AreaId")
                        .HasColumnType("char(26)")
                        .HasColumnName("area_id");

                    b.Property<TimeOnly?>("ClosingHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("closing_hours");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<TimeOnly?>("OpeningHours")
                        .HasColumnType("time(6)")
                        .HasColumnName("opening_hours");

                    b.Property<string>("PartnerId")
                        .HasColumnType("char(26)")
                        .HasColumnName("partner_id");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("char(20)")
                        .HasColumnName("phone");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StoreName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("store_name");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("PartnerId");

                    b.ToTable("tbl_store");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<string>("CampusId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campus_id");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<DateTime?>("DateVerified")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_verified");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("GenderId")
                        .HasColumnType("char(26)")
                        .HasColumnName("gender_id");

                    b.Property<ulong?>("IsVerify")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_verify");

                    b.Property<string>("LevelId")
                        .HasColumnType("char(26)")
                        .HasColumnName("level_id");

                    b.Property<string>("MajorId")
                        .HasColumnType("char(26)")
                        .HasColumnName("major_id");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("char(20)")
                        .HasColumnName("phone");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StudentCard")
                        .HasColumnType("text")
                        .HasColumnName("student_card");

                    b.Property<decimal?>("TotalIncome")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("total_income");

                    b.Property<decimal?>("TotalSpending")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("total_spending");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LevelId");

                    b.HasIndex("MajorId");

                    b.ToTable("tbl_student");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.StudentChallenge", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("ChallengeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("challenge_id");

                    b.Property<decimal?>("Condition")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("condition");

                    b.Property<decimal?>("Current")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("current");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<ulong?>("IsCompleted")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_completed");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StudentId")
                        .HasColumnType("char(26)")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.HasIndex("StudentId");

                    b.ToTable("tbl_student_challenge");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Type", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.University", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(320)
                        .HasColumnType("varchar(320)")
                        .HasColumnName("email");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<string>("Phone")
                        .HasColumnType("char(20)")
                        .HasColumnName("phone");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("UniversityName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("university_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_university");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Voucher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Condition")
                        .HasColumnType("text")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("PartnerId")
                        .HasColumnType("char(26)")
                        .HasColumnName("partner_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("TypeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("type_id");

                    b.Property<string>("VoucherName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("voucher_name");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.HasIndex("TypeId");

                    b.ToTable("tbl_voucher");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.VoucherItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("CampaignId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campaign_id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateOnly?>("ExpireOn")
                        .HasColumnType("date")
                        .HasColumnName("expire_on");

                    b.Property<ulong?>("IsBought")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_bought");

                    b.Property<ulong?>("IsUsed")
                        .HasColumnType("bit(1)")
                        .HasColumnName("is_used");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<DateOnly?>("ValidOn")
                        .HasColumnType("date")
                        .HasColumnName("valid_on");

                    b.Property<string>("VoucherId")
                        .HasColumnType("char(26)")
                        .HasColumnName("voucher_id");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("VoucherId");

                    b.ToTable("tbl_voucher_item");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.VoucherType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_voucher_type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Wallet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("balance");

                    b.Property<string>("CampaignId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campaign_id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("PartnerId")
                        .HasColumnType("char(26)")
                        .HasColumnName("partner_id");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StudentId")
                        .HasColumnType("char(26)")
                        .HasColumnName("student_id");

                    b.Property<string>("TypeId")
                        .HasColumnType("char(26)")
                        .HasColumnName("type_id");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TypeId");

                    b.ToTable("tbl_wallet");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.WalletTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("amount");

                    b.Property<string>("CampaignId")
                        .HasColumnType("char(26)")
                        .HasColumnName("campaign_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("rate");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("WalletId")
                        .HasColumnType("char(26)")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("WalletId");

                    b.ToTable("tbl_wallet_transaction");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.WalletType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_updated");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<ulong?>("State")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("TypeName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type_name");

                    b.HasKey("Id");

                    b.ToTable("tbl_wallet_type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Wishlist", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(26)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("PartnerId")
                        .HasColumnType("char(26)")
                        .HasColumnName("partner_id");

                    b.Property<ulong?>("States")
                        .HasColumnType("bit(1)")
                        .HasColumnName("state");

                    b.Property<ulong?>("Status")
                        .HasColumnType("bit(1)")
                        .HasColumnName("status");

                    b.Property<string>("StudentId")
                        .HasColumnType("char(26)")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.HasIndex("StudentId");

                    b.ToTable("tbl_wishlist");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Activity", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Store", "Store")
                        .WithMany("Activities")
                        .HasForeignKey("StoreId");

                    b.HasOne("Unibean.Repository.Entities.Student", "Student")
                        .WithMany("Activities")
                        .HasForeignKey("StudentId");

                    b.HasOne("Unibean.Repository.Entities.Type", "Type")
                        .WithMany("Activities")
                        .HasForeignKey("TypeId");

                    b.HasOne("Unibean.Repository.Entities.VoucherItem", "VoucherItem")
                        .WithMany("Activities")
                        .HasForeignKey("VoucherItemId");

                    b.Navigation("Store");

                    b.Navigation("Student");

                    b.Navigation("Type");

                    b.Navigation("VoucherItem");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.ActivityTransaction", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Activity", "Activity")
                        .WithMany("ActivityTransactions")
                        .HasForeignKey("ActivityId");

                    b.HasOne("Unibean.Repository.Entities.Wallet", "Wallet")
                        .WithMany("ActivityTransactions")
                        .HasForeignKey("WalletId");

                    b.Navigation("Activity");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Area", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.District", "District")
                        .WithMany("Areas")
                        .HasForeignKey("DistrictId");

                    b.Navigation("District");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Campaign", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Partner", "Partner")
                        .WithMany("Campaigns")
                        .HasForeignKey("PartnerId");

                    b.HasOne("Unibean.Repository.Entities.CampaignType", "Type")
                        .WithMany("Campaigns")
                        .HasForeignKey("TypeId");

                    b.Navigation("Partner");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignCampus", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campaign", "Campaign")
                        .WithMany("CampaignCampuses")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Unibean.Repository.Entities.Campus", "Campus")
                        .WithMany("CampaignCampuses")
                        .HasForeignKey("CampusId");

                    b.Navigation("Campaign");

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignGender", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campaign", "Campaign")
                        .WithMany("CampaignGenders")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Unibean.Repository.Entities.Gender", "Gender")
                        .WithMany("CampaignGenders")
                        .HasForeignKey("GenderId");

                    b.Navigation("Campaign");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignMajor", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campaign", "Campaign")
                        .WithMany("CampaignMajors")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Unibean.Repository.Entities.Major", "Major")
                        .WithMany("CampaignMajors")
                        .HasForeignKey("MajorId");

                    b.Navigation("Campaign");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignStore", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campaign", "Campaign")
                        .WithMany("CampaignStores")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Unibean.Repository.Entities.Store", "Store")
                        .WithMany("CampaignStores")
                        .HasForeignKey("StoreId");

                    b.Navigation("Campaign");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Campus", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Area", "Area")
                        .WithMany("Campuses")
                        .HasForeignKey("AreaId");

                    b.HasOne("Unibean.Repository.Entities.University", "University")
                        .WithMany("Campuses")
                        .HasForeignKey("UniversityId");

                    b.Navigation("Area");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Challenge", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.ChallengeType", "Type")
                        .WithMany("Challenges")
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.ChallengeTransaction", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.StudentChallenge", "Challenge")
                        .WithMany("ChallengeTransactions")
                        .HasForeignKey("ChallengeId");

                    b.HasOne("Unibean.Repository.Entities.Wallet", "Wallet")
                        .WithMany("ChallengeTransactions")
                        .HasForeignKey("WalletId");

                    b.Navigation("Challenge");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.District", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Image", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Invitation", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Student", "Invitee")
                        .WithMany("Invitees")
                        .HasForeignKey("InviteeId");

                    b.HasOne("Unibean.Repository.Entities.Student", "Inviter")
                        .WithMany("Inviters")
                        .HasForeignKey("InviterId");

                    b.Navigation("Invitee");

                    b.Navigation("Inviter");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Order", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Station", "Station")
                        .WithMany("Orders")
                        .HasForeignKey("StationId");

                    b.HasOne("Unibean.Repository.Entities.Student", "Student")
                        .WithMany("Orders")
                        .HasForeignKey("StudentId");

                    b.Navigation("Station");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.OrderDetail", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.HasOne("Unibean.Repository.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.OrderState", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Order", "Order")
                        .WithMany("OrderStates")
                        .HasForeignKey("OrderId");

                    b.HasOne("Unibean.Repository.Entities.State", "State")
                        .WithMany("OrderStates")
                        .HasForeignKey("StateId");

                    b.Navigation("Order");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.OrderTransaction", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Order", "Order")
                        .WithMany("OrderTransactions")
                        .HasForeignKey("OrderId");

                    b.HasOne("Unibean.Repository.Entities.Wallet", "Wallet")
                        .WithMany("OrderTransactions")
                        .HasForeignKey("WalletId");

                    b.Navigation("Order");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Payment", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Student", "Student")
                        .WithMany("Payments")
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.PaymentTransaction", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Payment", "Payment")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("PaymentId");

                    b.HasOne("Unibean.Repository.Entities.Wallet", "Wallet")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("WalletId");

                    b.Navigation("Payment");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Product", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Unibean.Repository.Entities.Level", "Level")
                        .WithMany("Products")
                        .HasForeignKey("LevelId");

                    b.Navigation("Category");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Request", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Admin", "Admin")
                        .WithMany("Requests")
                        .HasForeignKey("AdminId");

                    b.HasOne("Unibean.Repository.Entities.Partner", "Partner")
                        .WithMany("Requests")
                        .HasForeignKey("PartnerId");

                    b.Navigation("Admin");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.RequestTransaction", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Request", "Request")
                        .WithMany("RequestTransactions")
                        .HasForeignKey("RequestId");

                    b.HasOne("Unibean.Repository.Entities.Wallet", "Wallet")
                        .WithMany("RequestTransactions")
                        .HasForeignKey("WalletId");

                    b.Navigation("Request");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Store", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Area", "Area")
                        .WithMany("Stores")
                        .HasForeignKey("AreaId");

                    b.HasOne("Unibean.Repository.Entities.Partner", "Partner")
                        .WithMany("Stores")
                        .HasForeignKey("PartnerId");

                    b.Navigation("Area");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Student", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campus", "Campus")
                        .WithMany("Students")
                        .HasForeignKey("CampusId");

                    b.HasOne("Unibean.Repository.Entities.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId");

                    b.HasOne("Unibean.Repository.Entities.Level", "Level")
                        .WithMany("Students")
                        .HasForeignKey("LevelId");

                    b.HasOne("Unibean.Repository.Entities.Major", "Major")
                        .WithMany("Students")
                        .HasForeignKey("MajorId");

                    b.Navigation("Campus");

                    b.Navigation("Gender");

                    b.Navigation("Level");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.StudentChallenge", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Challenge", "Challenge")
                        .WithMany("StudentChallenges")
                        .HasForeignKey("ChallengeId");

                    b.HasOne("Unibean.Repository.Entities.Student", "Student")
                        .WithMany("StudentChallenges")
                        .HasForeignKey("StudentId");

                    b.Navigation("Challenge");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Voucher", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Partner", "Partner")
                        .WithMany("Vouchers")
                        .HasForeignKey("PartnerId");

                    b.HasOne("Unibean.Repository.Entities.VoucherType", "Type")
                        .WithMany("Vouchers")
                        .HasForeignKey("TypeId");

                    b.Navigation("Partner");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.VoucherItem", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campaign", "Campaign")
                        .WithMany("VoucherItems")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Unibean.Repository.Entities.Voucher", "Voucher")
                        .WithMany("VoucherItems")
                        .HasForeignKey("VoucherId");

                    b.Navigation("Campaign");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Wallet", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campaign", "Campaign")
                        .WithMany("Wallets")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Unibean.Repository.Entities.Partner", "Partner")
                        .WithMany("Wallets")
                        .HasForeignKey("PartnerId");

                    b.HasOne("Unibean.Repository.Entities.Student", "Student")
                        .WithMany("Wallets")
                        .HasForeignKey("StudentId");

                    b.HasOne("Unibean.Repository.Entities.WalletType", "Type")
                        .WithMany("Wallets")
                        .HasForeignKey("TypeId");

                    b.Navigation("Campaign");

                    b.Navigation("Partner");

                    b.Navigation("Student");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.WalletTransaction", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Campaign", "Campaign")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("CampaignId");

                    b.HasOne("Unibean.Repository.Entities.Wallet", "Wallet")
                        .WithMany("WalletTransactions")
                        .HasForeignKey("WalletId");

                    b.Navigation("Campaign");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Wishlist", b =>
                {
                    b.HasOne("Unibean.Repository.Entities.Partner", "Partner")
                        .WithMany("Wishlists")
                        .HasForeignKey("PartnerId");

                    b.HasOne("Unibean.Repository.Entities.Student", "Student")
                        .WithMany("Wishlists")
                        .HasForeignKey("StudentId");

                    b.Navigation("Partner");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Activity", b =>
                {
                    b.Navigation("ActivityTransactions");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Admin", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Area", b =>
                {
                    b.Navigation("Campuses");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Campaign", b =>
                {
                    b.Navigation("CampaignCampuses");

                    b.Navigation("CampaignGenders");

                    b.Navigation("CampaignMajors");

                    b.Navigation("CampaignStores");

                    b.Navigation("VoucherItems");

                    b.Navigation("WalletTransactions");

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.CampaignType", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Campus", b =>
                {
                    b.Navigation("CampaignCampuses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Challenge", b =>
                {
                    b.Navigation("StudentChallenges");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.ChallengeType", b =>
                {
                    b.Navigation("Challenges");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.District", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Gender", b =>
                {
                    b.Navigation("CampaignGenders");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Level", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Major", b =>
                {
                    b.Navigation("CampaignMajors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("OrderStates");

                    b.Navigation("OrderTransactions");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Partner", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("Requests");

                    b.Navigation("Stores");

                    b.Navigation("Vouchers");

                    b.Navigation("Wallets");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Payment", b =>
                {
                    b.Navigation("PaymentTransactions");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Request", b =>
                {
                    b.Navigation("RequestTransactions");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.State", b =>
                {
                    b.Navigation("OrderStates");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Station", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Store", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("CampaignStores");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Student", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Invitees");

                    b.Navigation("Inviters");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("StudentChallenges");

                    b.Navigation("Wallets");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.StudentChallenge", b =>
                {
                    b.Navigation("ChallengeTransactions");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Type", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.University", b =>
                {
                    b.Navigation("Campuses");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Voucher", b =>
                {
                    b.Navigation("VoucherItems");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.VoucherItem", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.VoucherType", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.Wallet", b =>
                {
                    b.Navigation("ActivityTransactions");

                    b.Navigation("ChallengeTransactions");

                    b.Navigation("OrderTransactions");

                    b.Navigation("PaymentTransactions");

                    b.Navigation("RequestTransactions");

                    b.Navigation("WalletTransactions");
                });

            modelBuilder.Entity("Unibean.Repository.Entities.WalletType", b =>
                {
                    b.Navigation("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
